

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 05 14:29:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F87K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	nvCOMRAM
    67  00000A                     __pnvCOMRAM:
    68                           	opt callstack 0
    69  00000A                     _TMR2_InterruptHandler:
    70                           	opt callstack 0
    71  00000A                     	ds	3
    72  00000D                     _TMR3_InterruptHandler:
    73                           	opt callstack 0
    74  00000D                     	ds	3
    75  000010                     _timer3ReloadVal:
    76                           	opt callstack 0
    77  000010                     	ds	2
    78  0000                     _CCPTMRS1bits	set	3884
    79  0000                     _ANCON2	set	3875
    80  0000                     _ANCON1	set	3876
    81  0000                     _ANCON0	set	3877
    82  0000                     _REFOCON	set	3882
    83  0000                     _T2CONbits	set	4042
    84  0000                     _T2CON	set	4042
    85  0000                     _TMR2	set	4044
    86  0000                     _PR2	set	4043
    87  0000                     _CCPR4H	set	3961
    88  0000                     _CCPR4L	set	3960
    89  0000                     _CCP4CON	set	3959
    90  0000                     _TRISD	set	3989
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISH	set	3993
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISG	set	3992
    95  0000                     _TRISA	set	3986
    96  0000                     _TRISF	set	3991
    97  0000                     _TRISE	set	3990
    98  0000                     _LATH	set	3984
    99  0000                     _LATC	set	3979
   100  0000                     _LATG	set	3983
   101  0000                     _LATB	set	3978
   102  0000                     _LATF	set	3982
   103  0000                     _LATA	set	3977
   104  0000                     _LATD	set	3980
   105  0000                     _LATE	set	3981
   106  0000                     _OSCTUNE	set	3995
   107  0000                     _OSCCON2	set	3940
   108  0000                     _OSCCON	set	4051
   109  0000                     _PIR1bits	set	3998
   110  0000                     _PIE1bits	set	3997
   111  0000                     _INTCONbits	set	4082
   112  0000                     _RCONbits	set	4048
   113  0000                     _T3GCONbits	set	4016
   114  0000                     _T3CONbits	set	4017
   115  0000                     _T3CON	set	4017
   116  0000                     _PIE2bits	set	4000
   117  0000                     _PIR2bits	set	4001
   118  0000                     _TMR3L	set	4018
   119  0000                     _TMR3H	set	4019
   120  0000                     _T3GCON	set	4016
   121                           
   122                           ; #config settings
   123  0000                     
   124                           	psect	cinit
   125  0001A6                     __pcinit:
   126                           	opt callstack 0
   127  0001A6                     start_initialization:
   128                           	opt callstack 0
   129  0001A6                     __initialization:
   130                           	opt callstack 0
   131  0001A6                     end_of_initialization:
   132                           	opt callstack 0
   133  0001A6                     __end_of__initialization:
   134                           	opt callstack 0
   135  0001A6  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136  0001A8  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137  0001AA  0100               	movlb	0
   138  0001AC  EFD8  F000         	goto	_main	;jump to C main() function
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	opt callstack 0
   143  000001                     TMR3_WriteTimer@timerVal:
   144                           	opt callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147  000001                     	ds	2
   148  000003                     ??_INTERRUPT_InterruptManager:
   149                           
   150                           ; 1 bytes @ 0x2
   151  000003                     	ds	2
   152  000005                     TMR3_SetInterruptHandler@InterruptHandler:
   153                           	opt callstack 0
   154  000005                     TMR2_SetInterruptHandler@InterruptHandler:
   155                           	opt callstack 0
   156                           
   157                           ; 3 bytes @ 0x4
   158  000005                     	ds	3
   159  000008                     ??_TMR3_Initialize:
   160                           
   161                           ; 1 bytes @ 0x7
   162  000008                     	ds	2
   163  00000A                     
   164                           ; 1 bytes @ 0x9
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 49 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    7
   190 ;; This function calls:
   191 ;;		_SYSTEM_Initialize
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  0001B0                     __ptext0:
   199                           	opt callstack 0
   200  0001B0                     _main:
   201                           	opt callstack 24
   202                           
   203                           ;main.c: 52:     SYSTEM_Initialize();
   204                           
   205                           ;incstack = 0
   206  0001B0  ECA4  F000         	call	_SYSTEM_Initialize	;wreg free
   207  0001B4                     l171:
   208                           
   209                           ;main.c: 71:     {;main.c: 73:     }
   210  0001B4  D7FF               	goto	l171
   211  0001B6                     __end_of_main:
   212                           	opt callstack 0
   213                           
   214 ;; *************** function _SYSTEM_Initialize *****************
   215 ;; Defined at:
   216 ;;		line 50 in file "mcc_generated_files/mcc.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels used:    1
   236 ;; Hardware stack levels required when called:    6
   237 ;; This function calls:
   238 ;;		_INTERRUPT_Initialize
   239 ;;		_OSCILLATOR_Initialize
   240 ;;		_PIN_MANAGER_Initialize
   241 ;;		_PWM4_Initialize
   242 ;;		_TMR2_Initialize
   243 ;;		_TMR3_Initialize
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  000148                     __ptext1:
   251                           	opt callstack 0
   252  000148                     _SYSTEM_Initialize:
   253                           	opt callstack 24
   254                           
   255                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   256                           
   257                           ;incstack = 0
   258  000148  ECE1  F000         	call	_INTERRUPT_Initialize	;wreg free
   259                           
   260                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   261  00014C  EC1E  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   262                           
   263                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   264  000150  ECBB  F000         	call	_OSCILLATOR_Initialize	;wreg free
   265                           
   266                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
   267  000154  EC3D  F000         	call	_TMR3_Initialize	;wreg free
   268                           
   269                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
   270  000158  ECB1  F000         	call	_PWM4_Initialize	;wreg free
   271                           
   272                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
   273  00015C  EC85  F000         	call	_TMR2_Initialize	;wreg free
   274  000160  0012               	return		;funcret
   275  000162                     __end_of_SYSTEM_Initialize:
   276                           	opt callstack 0
   277                           
   278 ;; *************** function _TMR3_Initialize *****************
   279 ;; Defined at:
   280 ;;		line 66 in file "mcc_generated_files/tmr3.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;Total ram usage:        2 bytes
   299 ;; Hardware stack levels used:    1
   300 ;; Hardware stack levels required when called:    5
   301 ;; This function calls:
   302 ;;		_TMR3_SetInterruptHandler
   303 ;; This function is called by:
   304 ;;		_SYSTEM_Initialize
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text2
   309  00007A                     __ptext2:
   310                           	opt callstack 0
   311  00007A                     _TMR3_Initialize:
   312                           	opt callstack 24
   313                           
   314                           ;mcc_generated_files/tmr3.c: 71:     T3GCON = 0x00;
   315                           
   316                           ;incstack = 0
   317  00007A  0E00               	movlw	0
   318  00007C  6EB0               	movwf	4016,c	;volatile
   319                           
   320                           ;mcc_generated_files/tmr3.c: 74:     TMR3H = 0x9E;
   321  00007E  0E9E               	movlw	158
   322  000080  6EB3               	movwf	4019,c	;volatile
   323                           
   324                           ;mcc_generated_files/tmr3.c: 77:     TMR3L = 0x58;
   325  000082  0E58               	movlw	88
   326  000084  6EB2               	movwf	4018,c	;volatile
   327                           
   328                           ;mcc_generated_files/tmr3.c: 80:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
   329  000086  50B2               	movf	4018,w,c	;volatile
   330  000088  CFB3 F008          	movff	4019,??_TMR3_Initialize	;volatile
   331  00008C  6A09               	clrf	(??_TMR3_Initialize+1)& (0+255),c
   332  00008E  C008  F009         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
   333  000092  6A08               	clrf	??_TMR3_Initialize,c
   334  000094  1008               	iorwf	??_TMR3_Initialize,w,c
   335  000096  6E10               	movwf	_timer3ReloadVal,c	;volatile
   336  000098  5009               	movf	??_TMR3_Initialize+1,w,c
   337  00009A  6E11               	movwf	_timer3ReloadVal+1,c	;volatile
   338                           
   339                           ;mcc_generated_files/tmr3.c: 83:     PIR2bits.TMR3IF = 0;
   340  00009C  92A1               	bcf	4001,1,c	;volatile
   341                           
   342                           ;mcc_generated_files/tmr3.c: 86:     PIE2bits.TMR3IE = 1;
   343  00009E  82A0               	bsf	4000,1,c	;volatile
   344                           
   345                           ;mcc_generated_files/tmr3.c: 89:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
   346  0000A0  0EB6               	movlw	low _TMR3_DefaultInterruptHandler
   347  0000A2  6E05               	movwf	TMR3_SetInterruptHandler@InterruptHandler,c
   348  0000A4  0E01               	movlw	high _TMR3_DefaultInterruptHandler
   349  0000A6  6E06               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1,c
   350  0000A8  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
   351  0000AA  6E07               	movwf	TMR3_SetInterruptHandler@InterruptHandler+2,c
   352  0000AC  ECC5  F000         	call	_TMR3_SetInterruptHandler	;wreg free
   353                           
   354                           ;mcc_generated_files/tmr3.c: 92:     T3CON = 0x01;
   355  0000B0  0E01               	movlw	1
   356  0000B2  6EB1               	movwf	4017,c	;volatile
   357  0000B4  0012               	return		;funcret
   358  0000B6                     __end_of_TMR3_Initialize:
   359                           	opt callstack 0
   360                           
   361 ;; *************** function _TMR3_SetInterruptHandler *****************
   362 ;; Defined at:
   363 ;;		line 173 in file "mcc_generated_files/tmr3.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
   366 ;;		 -> TMR3_DefaultInterruptHandler(1), 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;Total ram usage:        3 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; Hardware stack levels required when called:    4
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_TMR3_Initialize
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393  00018A                     __ptext3:
   394                           	opt callstack 0
   395  00018A                     _TMR3_SetInterruptHandler:
   396                           	opt callstack 24
   397                           
   398                           ;mcc_generated_files/tmr3.c: 174:     TMR3_InterruptHandler = InterruptHandler;
   399                           
   400                           ;incstack = 0
   401  00018A  C005  F00D         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
   402  00018E  C006  F00E         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
   403  000192  C007  F00F         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
   404  000196  0012               	return		;funcret
   405  000198                     __end_of_TMR3_SetInterruptHandler:
   406                           	opt callstack 0
   407                           
   408 ;; *************** function _TMR2_Initialize *****************
   409 ;; Defined at:
   410 ;;		line 66 in file "mcc_generated_files/tmr2.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    5
   431 ;; This function calls:
   432 ;;		_TMR2_SetInterruptHandler
   433 ;; This function is called by:
   434 ;;		_SYSTEM_Initialize
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text4
   439  00010A                     __ptext4:
   440                           	opt callstack 0
   441  00010A                     _TMR2_Initialize:
   442                           	opt callstack 24
   443                           
   444                           ;mcc_generated_files/tmr2.c: 71:     PR2 = 0x9B;
   445                           
   446                           ;incstack = 0
   447  00010A  0E9B               	movlw	155
   448  00010C  6ECB               	movwf	4043,c	;volatile
   449                           
   450                           ;mcc_generated_files/tmr2.c: 74:     TMR2 = 0x00;
   451  00010E  0E00               	movlw	0
   452  000110  6ECC               	movwf	4044,c	;volatile
   453                           
   454                           ;mcc_generated_files/tmr2.c: 77:     PIR1bits.TMR2IF = 0;
   455  000112  929E               	bcf	3998,1,c	;volatile
   456                           
   457                           ;mcc_generated_files/tmr2.c: 80:     PIE1bits.TMR2IE = 1;
   458  000114  829D               	bsf	3997,1,c	;volatile
   459                           
   460                           ;mcc_generated_files/tmr2.c: 83:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
   461  000116  0EBC               	movlw	low _TMR2_DefaultInterruptHandler
   462  000118  6E05               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   463  00011A  0E01               	movlw	high _TMR2_DefaultInterruptHandler
   464  00011C  6E06               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   465  00011E  0E00               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
   466  000120  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler+2,c
   467  000122  ECCC  F000         	call	_TMR2_SetInterruptHandler	;wreg free
   468                           
   469                           ;mcc_generated_files/tmr2.c: 86:     T2CON = 0x3D;
   470  000126  0E3D               	movlw	61
   471  000128  6ECA               	movwf	4042,c	;volatile
   472  00012A  0012               	return		;funcret
   473  00012C                     __end_of_TMR2_Initialize:
   474                           	opt callstack 0
   475                           
   476 ;; *************** function _TMR2_SetInterruptHandler *****************
   477 ;; Defined at:
   478 ;;		line 134 in file "mcc_generated_files/tmr2.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
   481 ;;		 -> TMR2_DefaultInterruptHandler(1), 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_TMR2_Initialize
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text5
   508  000198                     __ptext5:
   509                           	opt callstack 0
   510  000198                     _TMR2_SetInterruptHandler:
   511                           	opt callstack 24
   512                           
   513                           ;mcc_generated_files/tmr2.c: 135:     TMR2_InterruptHandler = InterruptHandler;
   514                           
   515                           ;incstack = 0
   516  000198  C005  F00A         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
   517  00019C  C006  F00B         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
   518  0001A0  C007  F00C         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
   519  0001A4  0012               	return		;funcret
   520  0001A6                     __end_of_TMR2_SetInterruptHandler:
   521                           	opt callstack 0
   522                           
   523 ;; *************** function _PWM4_Initialize *****************
   524 ;; Defined at:
   525 ;;		line 64 in file "mcc_generated_files/pwm4.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    4
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_SYSTEM_Initialize
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text6
   554  000162                     __ptext6:
   555                           	opt callstack 0
   556  000162                     _PWM4_Initialize:
   557                           	opt callstack 25
   558                           
   559                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x2C;
   560                           
   561                           ;incstack = 0
   562  000162  0E2C               	movlw	44
   563  000164  6E77               	movwf	3959,c	;volatile
   564                           
   565                           ;mcc_generated_files/pwm4.c: 72:  CCPR4L = 0x07;
   566  000166  0E07               	movlw	7
   567  000168  6E78               	movwf	3960,c	;volatile
   568                           
   569                           ;mcc_generated_files/pwm4.c: 75:  CCPR4H = 0x00;
   570  00016A  0E00               	movlw	0
   571  00016C  6E79               	movwf	3961,c	;volatile
   572                           
   573                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS1bits.C4TSEL = 0x0;
   574  00016E  0EFC               	movlw	-4
   575  000170  010F               	movlb	15	; () banked
   576  000172  172C               	andwf	44,f,b	;volatile
   577                           
   578                           ; BSR set to: 15
   579  000174  0012               	return		;funcret
   580  000176                     __end_of_PWM4_Initialize:
   581                           	opt callstack 0
   582                           
   583 ;; *************** function _PIN_MANAGER_Initialize *****************
   584 ;; Defined at:
   585 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    4
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_SYSTEM_Initialize
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text7
   614  00003C                     __ptext7:
   615                           	opt callstack 0
   616  00003C                     _PIN_MANAGER_Initialize:
   617                           	opt callstack 25
   618                           
   619                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   620                           
   621                           ; BSR set to: 15
   622                           ;incstack = 0
   623  00003C  0E00               	movlw	0
   624  00003E  6E8D               	movwf	3981,c	;volatile
   625                           
   626                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   627  000040  0E00               	movlw	0
   628  000042  6E8C               	movwf	3980,c	;volatile
   629                           
   630                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   631  000044  0E00               	movlw	0
   632  000046  6E89               	movwf	3977,c	;volatile
   633                           
   634                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
   635  000048  0E00               	movlw	0
   636  00004A  6E8E               	movwf	3982,c	;volatile
   637                           
   638                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
   639  00004C  0E00               	movlw	0
   640  00004E  6E8A               	movwf	3978,c	;volatile
   641                           
   642                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
   643  000050  0E00               	movlw	0
   644  000052  6E8F               	movwf	3983,c	;volatile
   645                           
   646                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
   647  000054  0E00               	movlw	0
   648  000056  6E8B               	movwf	3979,c	;volatile
   649                           
   650                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
   651  000058  0E00               	movlw	0
   652  00005A  6E90               	movwf	3984,c	;volatile
   653                           
   654                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0xFF;
   655  00005C  6896               	setf	3990,c	;volatile
   656                           
   657                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFE;
   658  00005E  0EFE               	movlw	254
   659  000060  6E97               	movwf	3991,c	;volatile
   660                           
   661                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
   662  000062  6892               	setf	3986,c	;volatile
   663                           
   664                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0x17;
   665  000064  0E17               	movlw	23
   666  000066  6E98               	movwf	3992,c	;volatile
   667                           
   668                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
   669  000068  6893               	setf	3987,c	;volatile
   670                           
   671                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0xFF;
   672  00006A  6899               	setf	3993,c	;volatile
   673                           
   674                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
   675  00006C  6894               	setf	3988,c	;volatile
   676                           
   677                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xFF;
   678  00006E  6895               	setf	3989,c	;volatile
   679                           
   680                           ;mcc_generated_files/pin_manager.c: 84:     ANCON0 = 0xFF;
   681  000070  010F               	movlb	15	; () banked
   682  000072  6925               	setf	37,b	;volatile
   683                           
   684                           ; BSR set to: 15
   685                           ;mcc_generated_files/pin_manager.c: 85:     ANCON1 = 0xFF;
   686  000074  6924               	setf	36,b	;volatile
   687                           
   688                           ; BSR set to: 15
   689                           ;mcc_generated_files/pin_manager.c: 86:     ANCON2 = 0xFF;
   690  000076  6923               	setf	35,b	;volatile
   691                           
   692                           ; BSR set to: 15
   693  000078  0012               	return		;funcret
   694  00007A                     __end_of_PIN_MANAGER_Initialize:
   695                           	opt callstack 0
   696                           
   697 ;; *************** function _OSCILLATOR_Initialize *****************
   698 ;; Defined at:
   699 ;;		line 61 in file "mcc_generated_files/mcc.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    4
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_SYSTEM_Initialize
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text8
   728  000176                     __ptext8:
   729                           	opt callstack 0
   730  000176                     _OSCILLATOR_Initialize:
   731                           	opt callstack 25
   732                           
   733                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
   734                           
   735                           ; BSR set to: 15
   736                           ;incstack = 0
   737  000176  0E30               	movlw	48
   738  000178  6ED3               	movwf	4051,c	;volatile
   739                           
   740                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
   741  00017A  0E00               	movlw	0
   742  00017C  6E64               	movwf	3940,c	;volatile
   743                           
   744                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
   745  00017E  0E00               	movlw	0
   746  000180  6E9B               	movwf	3995,c	;volatile
   747                           
   748                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
   749  000182  0E00               	movlw	0
   750  000184  010F               	movlb	15	; () banked
   751  000186  6F2A               	movwf	42,b	;volatile
   752                           
   753                           ; BSR set to: 15
   754  000188  0012               	return		;funcret
   755  00018A                     __end_of_OSCILLATOR_Initialize:
   756                           	opt callstack 0
   757                           
   758 ;; *************** function _INTERRUPT_Initialize *****************
   759 ;; Defined at:
   760 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		None
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    4
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_SYSTEM_Initialize
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text9
   789  0001C2                     __ptext9:
   790                           	opt callstack 0
   791  0001C2                     _INTERRUPT_Initialize:
   792                           	opt callstack 25
   793                           
   794                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   795                           
   796                           ; BSR set to: 15
   797                           ;incstack = 0
   798  0001C2  9ED0               	bcf	4048,7,c	;volatile
   799  0001C4  0012               	return		;funcret
   800  0001C6                     __end_of_INTERRUPT_Initialize:
   801                           	opt callstack 0
   802                           
   803 ;; *************** function _INTERRUPT_InterruptManager *****************
   804 ;; Defined at:
   805 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;Total ram usage:        2 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    3
   826 ;; This function calls:
   827 ;;		_TMR2_ISR
   828 ;;		_TMR3_ISR
   829 ;; This function is called by:
   830 ;;		Interrupt level 2
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	intcode
   835  000008                     __pintcode:
   836                           	opt callstack 0
   837  000008                     _INTERRUPT_InterruptManager:
   838                           	opt callstack 24
   839                           
   840                           ;incstack = 0
   841  000008  8212               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   842  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
   843  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   844                           
   845                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
   846  000012  ACF2               	btfss	4082,6,c	;volatile
   847  000014  D00B               	goto	i2l88
   848                           
   849                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
   850  000016  B2A0               	btfsc	4000,1,c	;volatile
   851  000018  A2A1               	btfss	4001,1,c	;volatile
   852  00001A  D003               	goto	i2l87
   853                           
   854                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR3_ISR();
   855  00001C  EC5B  F000         	call	_TMR3_ISR	;wreg free
   856                           
   857                           ;mcc_generated_files/interrupt_manager.c: 66:         }
   858  000020  D005               	goto	i2l88
   859  000022                     i2l87:
   860  000022  B29D               	btfsc	3997,1,c	;volatile
   861  000024  A29E               	btfss	3998,1,c	;volatile
   862  000026  D002               	goto	i2l88
   863                           
   864                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR2_ISR();
   865  000028  EC73  F000         	call	_TMR2_ISR	;wreg free
   866  00002C                     i2l88:
   867                           
   868                           ;mcc_generated_files/interrupt_manager.c: 75:     }
   869  00002C  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   870  000030  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   871  000034  9212               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   872  000036  0011               	retfie		f
   873  000038                     __end_of_INTERRUPT_InterruptManager:
   874                           	opt callstack 0
   875                           
   876 ;; *************** function _TMR3_ISR *****************
   877 ;; Defined at:
   878 ;;		line 159 in file "mcc_generated_files/tmr3.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		Absolute function
   901 ;;		_TMR3_DefaultInterruptHandler
   902 ;;		_TMR3_WriteTimer
   903 ;; This function is called by:
   904 ;;		_INTERRUPT_InterruptManager
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text11
   909  0000B6                     __ptext11:
   910                           	opt callstack 0
   911  0000B6                     _TMR3_ISR:
   912                           	opt callstack 24
   913                           
   914                           ;mcc_generated_files/tmr3.c: 163:     PIR2bits.TMR3IF = 0;
   915                           
   916                           ;incstack = 0
   917  0000B6  92A1               	bcf	4001,1,c	;volatile
   918                           
   919                           ;mcc_generated_files/tmr3.c: 164:     TMR3_WriteTimer(timer3ReloadVal);
   920  0000B8  C010  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
   921  0000BC  C011  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
   922  0000C0  EC96  F000         	call	_TMR3_WriteTimer	;wreg free
   923                           
   924                           ;mcc_generated_files/tmr3.c: 166:     if(TMR3_InterruptHandler)
   925  0000C4  500D               	movf	_TMR3_InterruptHandler,w,c
   926  0000C6  100E               	iorwf	_TMR3_InterruptHandler+1,w,c
   927  0000C8  100F               	iorwf	_TMR3_InterruptHandler+2,w,c
   928  0000CA  B4D8               	btfsc	status,2,c
   929  0000CC  0012               	return	
   930                           
   931                           ;mcc_generated_files/tmr3.c: 167:     {;mcc_generated_files/tmr3.c: 168:         TMR3_In
      +                          terruptHandler();
   932  0000CE  D801               	call	i2u13_48
   933  0000D0  0012               	return	
   934  0000D2                     i2u13_48:
   935  0000D2  0005               	push	
   936  0000D4  6EFA               	movwf	pclath,c
   937  0000D6  500D               	movf	_TMR3_InterruptHandler,w,c
   938  0000D8  6EFD               	movwf	tosl,c
   939  0000DA  500E               	movf	_TMR3_InterruptHandler+1,w,c
   940  0000DC  6EFE               	movwf	tosh,c
   941  0000DE  500F               	movf	_TMR3_InterruptHandler+2,w,c
   942  0000E0  6EFF               	movwf	tosu,c
   943  0000E2  50FA               	movf	pclath,w,c
   944  0000E4  0012               	return		;indir
   945  0000E6                     __end_of_TMR3_ISR:
   946                           	opt callstack 0
   947                           
   948 ;; *************** function _TMR3_WriteTimer *****************
   949 ;; Defined at:
   950 ;;		line 122 in file "mcc_generated_files/tmr3.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  timerVal        2    0[COMRAM] unsigned short 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_TMR3_ISR
   974 ;;		_TMR3_Reload
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text12
   979  00012C                     __ptext12:
   980                           	opt callstack 0
   981  00012C                     _TMR3_WriteTimer:
   982                           	opt callstack 25
   983                           
   984                           ;mcc_generated_files/tmr3.c: 122: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 123: {;mcc_generated_files/tmr3.c: 124:     if (T3CONbits.nT3SYNC == 1)
   985                           
   986                           ;incstack = 0
   987  00012C  A4B1               	btfss	4017,2,c	;volatile
   988  00012E  D007               	goto	i2l1088
   989                           
   990                           ;mcc_generated_files/tmr3.c: 125:     {;mcc_generated_files/tmr3.c: 127:         T3CONbi
      +                          ts.TMR3ON = 0;
   991  000130  90B1               	bcf	4017,0,c	;volatile
   992                           
   993                           ;mcc_generated_files/tmr3.c: 130:         TMR3H = (timerVal >> 8);
   994  000132  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
   995  000134  6EB3               	movwf	4019,c	;volatile
   996                           
   997                           ;mcc_generated_files/tmr3.c: 131:         TMR3L = timerVal;
   998  000136  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
   999                           
  1000                           ;mcc_generated_files/tmr3.c: 134:         T3CONbits.TMR3ON =1;
  1001  00013A  80B1               	bsf	4017,0,c	;volatile
  1002                           
  1003                           ;mcc_generated_files/tmr3.c: 135:     }
  1004  00013C  0012               	return	
  1005  00013E                     i2l1088:
  1006                           
  1007                           ;mcc_generated_files/tmr3.c: 137:     {;mcc_generated_files/tmr3.c: 139:         TMR3H =
      +                           (timerVal >> 8);
  1008  00013E  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
  1009  000140  6EB3               	movwf	4019,c	;volatile
  1010                           
  1011                           ;mcc_generated_files/tmr3.c: 140:         TMR3L = timerVal;
  1012  000142  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1013  000146  0012               	return		;funcret
  1014  000148                     __end_of_TMR3_WriteTimer:
  1015                           	opt callstack 0
  1016                           
  1017 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  1018 ;; Defined at:
  1019 ;;		line 177 in file "mcc_generated_files/tmr3.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    1
  1040 ;; This function calls:
  1041 ;;		_performAction
  1042 ;; This function is called by:
  1043 ;;		_TMR3_Initialize
  1044 ;;		_TMR3_ISR
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text13
  1049  0001B6                     __ptext13:
  1050                           	opt callstack 0
  1051  0001B6                     _TMR3_DefaultInterruptHandler:
  1052                           	opt callstack 24
  1053                           
  1054                           ;mcc_generated_files/tmr3.c: 181:     performAction();
  1055                           
  1056                           ;incstack = 0
  1057  0001B6  ECE3  F000         	call	_performAction	;wreg free
  1058  0001BA  0012               	return		;funcret
  1059  0001BC                     __end_of_TMR3_DefaultInterruptHandler:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _performAction *****************
  1063 ;; Defined at:
  1064 ;;		line 1 in file "ISRFuntions.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		None
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_TMR3_DefaultInterruptHandler
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text14
  1092  0001C6                     __ptext14:
  1093                           	opt callstack 0
  1094  0001C6                     _performAction:
  1095                           	opt callstack 24
  1096                           
  1097                           ;ISRFuntions.c: 3:     return;
  1098                           
  1099                           ;incstack = 0
  1100  0001C6  0012               	return		;funcret
  1101  0001C8                     __end_of_performAction:
  1102                           	opt callstack 0
  1103                           
  1104 ;; *************** function _TMR2_ISR *****************
  1105 ;; Defined at:
  1106 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    2
  1127 ;; This function calls:
  1128 ;;		Absolute function
  1129 ;;		_TMR2_DefaultInterruptHandler
  1130 ;; This function is called by:
  1131 ;;		_INTERRUPT_InterruptManager
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text15
  1136  0000E6                     __ptext15:
  1137                           	opt callstack 0
  1138  0000E6                     _TMR2_ISR:
  1139                           	opt callstack 24
  1140                           
  1141                           ;mcc_generated_files/tmr2.c: 125:     PIR1bits.TMR2IF = 0;
  1142                           
  1143                           ;incstack = 0
  1144  0000E6  929E               	bcf	3998,1,c	;volatile
  1145                           
  1146                           ;mcc_generated_files/tmr2.c: 127:     if(TMR2_InterruptHandler)
  1147  0000E8  500A               	movf	_TMR2_InterruptHandler,w,c
  1148  0000EA  100B               	iorwf	_TMR2_InterruptHandler+1,w,c
  1149  0000EC  100C               	iorwf	_TMR2_InterruptHandler+2,w,c
  1150  0000EE  B4D8               	btfsc	status,2,c
  1151  0000F0  0012               	return	
  1152                           
  1153                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 129:         TMR2_In
      +                          terruptHandler();
  1154  0000F2  D801               	call	i2u5_48
  1155  0000F4  0012               	return	
  1156  0000F6                     i2u5_48:
  1157  0000F6  0005               	push	
  1158  0000F8  6EFA               	movwf	pclath,c
  1159  0000FA  500A               	movf	_TMR2_InterruptHandler,w,c
  1160  0000FC  6EFD               	movwf	tosl,c
  1161  0000FE  500B               	movf	_TMR2_InterruptHandler+1,w,c
  1162  000100  6EFE               	movwf	tosh,c
  1163  000102  500C               	movf	_TMR2_InterruptHandler+2,w,c
  1164  000104  6EFF               	movwf	tosu,c
  1165  000106  50FA               	movf	pclath,w,c
  1166  000108  0012               	return		;indir
  1167  00010A                     __end_of_TMR2_ISR:
  1168                           	opt callstack 0
  1169                           
  1170 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  1171 ;; Defined at:
  1172 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    1
  1193 ;; This function calls:
  1194 ;;		_performTm2PwmAction
  1195 ;; This function is called by:
  1196 ;;		_TMR2_Initialize
  1197 ;;		_TMR2_ISR
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text16
  1202  0001BC                     __ptext16:
  1203                           	opt callstack 0
  1204  0001BC                     _TMR2_DefaultInterruptHandler:
  1205                           	opt callstack 24
  1206                           
  1207                           ;mcc_generated_files/tmr2.c: 142:     performTm2PwmAction();
  1208                           
  1209                           ;incstack = 0
  1210  0001BC  ECE4  F000         	call	_performTm2PwmAction	;wreg free
  1211  0001C0  0012               	return		;funcret
  1212  0001C2                     __end_of_TMR2_DefaultInterruptHandler:
  1213                           	opt callstack 0
  1214                           
  1215 ;; *************** function _performTm2PwmAction *****************
  1216 ;; Defined at:
  1217 ;;		line 6 in file "ISRFuntions.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		None
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_TMR2_DefaultInterruptHandler
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text17
  1245  0001C8                     __ptext17:
  1246                           	opt callstack 0
  1247  0001C8                     _performTm2PwmAction:
  1248                           	opt callstack 24
  1249                           
  1250                           ;incstack = 0
  1251  0001C8  0012               	return		;funcret
  1252  0001CA                     __end_of_performTm2PwmAction:
  1253                           	opt callstack 0
  1254  0000                     
  1255                           	psect	text18
  1256  000000                     __ptext18:
  1257                           	opt callstack 0
  1258                           
  1259                           	psect	rparam
  1260  0000                     
  1261                           	psect	temp
  1262  000012                     btemp:
  1263                           	opt callstack 0
  1264  000012                     	ds	1
  1265  0000                     int$flags	set	btemp
  1266  0000                     wtemp8	set	btemp+1
  1267  0000                     ttemp5	set	btemp+1
  1268  0000                     ttemp6	set	btemp+4
  1269  0000                     ttemp7	set	btemp+8
  1270                           tosu	equ	0xFFF
  1271                           tosh	equ	0xFFE
  1272                           tosl	equ	0xFFD
  1273                           stkptr	equ	0xFFC
  1274                           pclatu	equ	0xFFB
  1275                           pclath	equ	0xFFA
  1276                           pcl	equ	0xFF9
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           indf0	equ	0xFEF
  1284                           postinc0	equ	0xFEE
  1285                           postdec0	equ	0xFED
  1286                           preinc0	equ	0xFEC
  1287                           plusw0	equ	0xFEB
  1288                           fsr0h	equ	0xFEA
  1289                           fsr0l	equ	0xFE9
  1290                           wreg	equ	0xFE8
  1291                           indf1	equ	0xFE7
  1292                           postinc1	equ	0xFE6
  1293                           postdec1	equ	0xFE5
  1294                           preinc1	equ	0xFE4
  1295                           plusw1	equ	0xFE3
  1296                           fsr1h	equ	0xFE2
  1297                           fsr1l	equ	0xFE1
  1298                           bsr	equ	0xFE0
  1299                           indf2	equ	0xFDF
  1300                           postinc2	equ	0xFDE
  1301                           postdec2	equ	0xFDD
  1302                           preinc2	equ	0xFDC
  1303                           plusw2	equ	0xFDB
  1304                           fsr2h	equ	0xFDA
  1305                           fsr2l	equ	0xFD9
  1306                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR3_ISR->_TMR3_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     196
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0      98
                                              7 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0     240
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
                      _performAction
 ---------------------------------------------------------------------------------
 (7) _performAction                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
                _performTm2PwmAction
 ---------------------------------------------------------------------------------
 (7) _performTm2PwmAction                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _performTm2PwmAction
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
       _performAction
     _TMR3_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      9      11       1       18.1%
STACK                0      0       0       2        0.0%
DATA                 0      0      11       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0      11      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BIGRAM             F15      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 05 14:29:11 2019

                              __CFG_BW$16 000000          __end_of_TMR2_SetInterruptHandler 01A6  
                             __CFG_ABW$MM 000000                               __CFG_BORV$3 000000  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                            __CFG_CP4$OFF 000000                              __CFG_CP5$OFF 000000  
                            __CFG_CP6$OFF 000000                              __CFG_CP7$OFF 000000  
                                     l171 01B4                              __CFG_CPB$OFF 000000  
                                     _PR2 000FCB                              __CFG_CPD$OFF 000000  
                         _TMR2_Initialize 010A                           _PWM4_Initialize 0162  
                                     tosl 000FFD                           _timer3ReloadVal 0010  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _LATF 000F8E  
                                    _LATG 000F8F                                      _LATH 000F90  
                                    i2l87 0022                                      i2l88 002C  
                                    _TMR2 000FCC                                      _main 01B0  
                                    btemp 0012                                      start 0038  
                           __CFG_IESO$OFF 000000                           _TMR3_Initialize 007A  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                           __CFG_RETEN$ON 000000            __size_of_OSCILLATOR_Initialize 0014  
                           __CFG_WAIT$OFF 000000             __end_of_OSCILLATOR_Initialize 018A  
                                   ?_main 0001                                     _T2CON 000FCA  
                                   _T3CON 000FB1                       _performTm2PwmAction 01C8  
                          __CFG_DEBUG$OFF 000000                                     _TMR3H 000FB3  
                                   _TMR3L 000FB2                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _TRISF 000F97                                     _TRISG 000F98  
                                   _TRISH 000F99                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
       __size_of_TMR3_SetInterruptHandler 000E                             __CFG_WRT3$OFF 000000  
                           __CFG_WRT4$OFF 000000                            __CFG_EBRT0$OFF 000000  
                           __CFG_WRT5$OFF 000000                            __CFG_EBRT1$OFF 000000  
                           __CFG_WRT6$OFF 000000                            __CFG_EBRT2$OFF 000000  
                           __CFG_WRT7$OFF 000000                            __CFG_EBRT3$OFF 000000  
               ?_TMR3_SetInterruptHandler 0005                            __CFG_EBRT4$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBRT5$OFF 000000  
                          __CFG_EBRT6$OFF 000000                            __CFG_EBRT7$OFF 000000  
                          __CFG_EASHFT$ON 000000                          __end_of_TMR2_ISR 010A  
                           __CFG_WRTB$OFF 000000                          __end_of_TMR3_ISR 00E6  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBRTB$OFF 000000            ??_TMR3_DefaultInterruptHandler 0001  
                   __end_of_performAction 01C8                                     pclath 000FFA  
                                   ttemp5 0013                                     ttemp6 0016  
                                   ttemp7 001A                                     status 000FD8  
                                   wtemp8 0013                      ?_performTm2PwmAction 0001  
                         __initialization 01A6                              __end_of_main 01B6  
                 __end_of_PWM4_Initialize 0176                   __end_of_TMR2_Initialize 012C  
             ?_INTERRUPT_InterruptManager 0001                  _TMR2_SetInterruptHandler 0198  
                                  ??_main 000A                             __activetblptr 000003  
                   _TMR3_InterruptHandler 000D                                    _CCPR4H 000F79  
                                  _CCPR4L 000F78                                    _ANCON0 000F25  
                                  _ANCON1 000F24                                    _ANCON2 000F23  
                                  _T3GCON 000FB0                   __end_of_TMR3_Initialize 00B6  
                         __CFG_BBSIZ$BB2K 000000                                    i2l1088 013E  
                          __CFG_WDTEN$OFF 000000                                    _OSCCON 000FD3  
                   ??_performTm2PwmAction 0001                                    i2u5_48 00F6  
                         _TMR3_WriteTimer 012C                            __CFG_XINST$OFF 000000  
                            _CCPTMRS1bits 000F2C                            __CFG_STVREN$ON 000000  
TMR2_SetInterruptHandler@InterruptHandler 0005  TMR3_SetInterruptHandler@InterruptHandler 0005  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0148  
                              __accesstop 0060                   __end_of__initialization 01A6  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 000A  
                               ?_TMR2_ISR 0001                                 ?_TMR3_ISR 0001  
                        ?_TMR2_Initialize 0001                          ?_PWM4_Initialize 0001  
               __end_of_SYSTEM_Initialize 0162                   __end_of_TMR3_WriteTimer 0148  
                        ?_TMR3_Initialize 0001                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 000A          __end_of_TMR3_SetInterruptHandler 0198  
                              ??_TMR2_ISR 0001                                ??_TMR3_ISR 0003  
                                 _CCP4CON 000F77                                   _REFOCON 000F2A  
                                 _OSCCON2 000F64                                   i2u13_48 00D2  
                                 _OSCTUNE 000F9B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0008                                   __pcinit 01A6  
                                 __ramtop 1000                                   __ptext0 01B0  
                                 __ptext1 0148                                   __ptext2 007A  
                                 __ptext3 018A                                   __ptext4 010A  
                                 __ptext5 0198                                   __ptext6 0162  
                                 __ptext7 003C                                   __ptext8 0176  
                                 __ptext9 01C2                     _OSCILLATOR_Initialize 0176  
                               _T2CONbits 000FCA                                 _T3CONbits 000FB1  
                ??_PIN_MANAGER_Initialize 0005                         __CFG_MSSPMSK$MSK7 000000  
              __size_of_SYSTEM_Initialize 001A                      end_of_initialization 01A6  
                        ?_TMR3_WriteTimer 0001                    __size_of_performAction 0002  
                _TMR3_SetInterruptHandler 018A                          __CFG_FOSC$INTIO2 000000  
             __end_of_performTm2PwmAction 01CA              __end_of_INTERRUPT_Initialize 01C6  
    __end_of_TMR2_DefaultInterruptHandler 01C2     __size_of_TMR2_DefaultInterruptHandler 0006  
            _TMR2_DefaultInterruptHandler 01BC                         __size_of_TMR2_ISR 0024  
                       __size_of_TMR3_ISR 0030                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 01A6           __size_of_PIN_MANAGER_Initialize 003E  
                           _performAction 01C6             ?_TMR2_DefaultInterruptHandler 0001  
                __size_of_PWM4_Initialize 0014                  __size_of_TMR2_Initialize 0022  
                          ?_performAction 0001                    _PIN_MANAGER_Initialize 003C  
                       __CFG_CCP2MX$PORTC 000000                  __size_of_TMR3_Initialize 003C  
                               __pintcode 0008              ??_INTERRUPT_InterruptManager 0003  
                    _INTERRUPT_Initialize 01C2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0       __size_of_INTERRUPT_InterruptManager 0030  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
              ??_TMR3_SetInterruptHandler 0008                                  _RCONbits 000FD0  
                                _TMR2_ISR 00E6                                  _TMR3_ISR 00B6  
                       __CFG_ECCPMX$PORTE 000000                          __CFG_SOSCSEL$DIG 000000  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000E  
               ?_TMR2_SetInterruptHandler 0005                           ??_performAction 0001  
                   ?_INTERRUPT_Initialize 0001                         ??_TMR2_Initialize 0008  
                       ??_PWM4_Initialize 0005                                  __Hrparam 0000  
                __size_of_TMR3_WriteTimer 001C                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                   ??_OSCILLATOR_Initialize 0005  
                       ??_TMR3_Initialize 0008                                  __ptext11 00B6  
                                __ptext12 012C                                  __ptext13 01B6  
                                __ptext14 01C6                                  __ptext15 00E6  
                                __ptext16 01BC                                  __ptext17 01C8  
                                __ptext18 0000                                _T3GCONbits 000FB0  
                 TMR3_WriteTimer@timerVal 0001                             __size_of_main 0006  
            __size_of_performTm2PwmAction 0002                       __CFG_RTCOSC$SOSCREF 000000  
                                int$flags 0012        __end_of_INTERRUPT_InterruptManager 0038  
              _INTERRUPT_InterruptManager 0008      __end_of_TMR3_DefaultInterruptHandler 01BC  
   __size_of_TMR3_DefaultInterruptHandler 0006              _TMR3_DefaultInterruptHandler 01B6  
                     __CFG_INTOSCSEL$HIGH 000000                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0005                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001                        __CFG_WDTPS$1048576 000000  
                       ??_TMR3_WriteTimer 0003             ?_TMR3_DefaultInterruptHandler 0001  
          __end_of_PIN_MANAGER_Initialize 007A                       __CFG_BORPWR$ZPBORMV 000000  
                   _TMR2_InterruptHandler 000A  
